# As requisições vem antes para o service, em seguida para os pods
apiVersion: v1
kind: Service
metadata:
  name: transaction-service
  namespace: quarkus-cqrs-demo
spec:
  ports:  
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: NodePort  # tipos de service
  selector:  # seleciona os pods pelo selector 
    app: transaction-app
    namespace: quarkus-cqrs-demo

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-app
  namespace: quarkus-cqrs-demo
spec:
  replicas: 2 # service vem com um proxy, e olha qual está mais disponível, balanceia a carga
  selector:
    matchLabels:
      app: transaction-app
      namespace: quarkus-cqrs-demo
  template:
    metadata:
      labels:
        app: transaction-app
        namespace: quarkus-cqrs-demo
    spec:
      containers:
        - name: transaction-app
          image: moduscreate/quarkus-transaction-service:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe: 
            httpGet:
              port: 8080
              path: /transaction-service/health/live
          readinessProbe:
            httpGet:
              path: /transaction-service/health/ready
              port: 8080